searchState.loadedDescShard("scolapasta_strbuf", 0, "A contiguous growable byte string, written as <code>Buf</code>, short …\nA contiguous growable byte string, written as <code>Buf</code>, short …\nA wrapper around the decomposed parts of a <code>Vec&lt;T&gt;</code>.\nReturn an unsafe mutable pointer to the buffer’s inner …\nExtract a mutable slice containing the entire buffer.\nReturn a raw pointer to the buffer’s inner vec, or a …\nExtract a slice containing the entire buffer.\nReturns the total number of bytes the buffer can hold …\nThe number of elements the source vector can hold without …\nClear the buffer, removing all bytes.\nCopy and append all bytes in the given slice to the <code>Buf</code>.\nDecompose a <code>Vec&lt;T&gt;</code> into its raw components.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Buf</code> directly from a pointer, a capacity, and a …\nConstruct the raw components of a <code>Vec&lt;T&gt;</code> by decomposing it.\nInsert a byte at position <code>index</code> within the buffer, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the buffer into <code>Box&lt;[u8]&gt;</code>.\nConsume this buffer and return its inner <code>Vec&lt;u8&gt;</code>.\nDecomposes a <code>Buf</code> into its raw components.\nCreates a <code>Vec&lt;T&gt;</code> directly from the raw components of …\nReturn <code>true</code> if the buffer has empty byte content.\nReturn the number of bytes in the buffer, also referred to …\nThe number of elements in the source vector, also referred …\nConstructs a new, empty <code>Buf</code>.\nRemove the last byte from the buffer and return it, or <code>None</code>…\nA non-null pointer to a buffer of <code>T</code>.\nAppend the given byte to the end of this buffer.\nAppend the given <code>char</code> to the end of the buffer.\nAppend the given slice to the end of this buffer.\nRemove and return the byte at position <code>index</code> within the …\nReserves capacity for at least <code>additional</code> more bytes to be …\nReserves the minimum capacity for at least <code>additional</code> more …\nResize the <code>Buf</code> in-place so that <code>len</code> is equal to <code>new_len</code>.\nRetain only the bytes specified by the predicate.\nForce the length of the buffer to <code>new_len</code>.\nShrinks the capacity of the buffer with a lower bound.\nShrinks the capacity of the buffer as much as possible …\nShorten the buffer, keeping the first <code>len</code> bytes and …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nConstructs a new, empty <code>Buf</code> with at least the specified …")