searchState.loadedDescShard("mezzaluna_conversion_methods", 0, "Ruby implicit conversion vocabulary types.\nDefines the supported Ruby object conversion methods and …\nThe conversion is a coercion, like <code>#to_i</code>.\nRepresents a single Ruby conversion method, including its …\nA table of Ruby conversion methods and their metadata.\nWhether the conversion is implicit, like <code>#to_int</code>, or a …\nThe conversion is implicit, like <code>#to_int</code>.\nError type for conversion method table initialization …\nReturns the C string representation of the conversion …\nFind the conversion metadata for the given method name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the conversion methods table.\nGet the conversion methods table, initializing it if …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the conversion is a coercion.\nReturns whether the conversion method is a coercion.\nReturns whether the conversion is implicit.\nReturns whether the conversion method is an implicit …\nReturns a message describing the error.\nReturns the name of the conversion method.\nCreate a new <code>InitError</code>.\nCreate a new <code>ConvMethods</code>.\nReturns the interned symbol id for the conversion method.")